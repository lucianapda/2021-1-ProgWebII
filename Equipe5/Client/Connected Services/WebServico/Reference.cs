//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.WebServico {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filme", Namespace="http://schemas.datacontract.org/2004/07/WebService")]
    [System.SerializableAttribute()]
    public partial class Filme : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataLancamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double duracaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataLancamento {
            get {
                return this.dataLancamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.dataLancamentoField, value) != true)) {
                    this.dataLancamentoField = value;
                    this.RaisePropertyChanged("dataLancamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descricao {
            get {
                return this.descricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.descricaoField, value) != true)) {
                    this.descricaoField = value;
                    this.RaisePropertyChanged("descricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double duracao {
            get {
                return this.duracaoField;
            }
            set {
                if ((this.duracaoField.Equals(value) != true)) {
                    this.duracaoField = value;
                    this.RaisePropertyChanged("duracao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plataforma", Namespace="http://schemas.datacontract.org/2004/07/WebService")]
    [System.SerializableAttribute()]
    public partial class Plataforma : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.WebServico.Filme[] filmesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.WebServico.Filme[] filmes {
            get {
                return this.filmesField;
            }
            set {
                if ((object.ReferenceEquals(this.filmesField, value) != true)) {
                    this.filmesField = value;
                    this.RaisePropertyChanged("filmes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipo {
            get {
                return this.tipoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoField, value) != true)) {
                    this.tipoField = value;
                    this.RaisePropertyChanged("tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double valor {
            get {
                return this.valorField;
            }
            set {
                if ((this.valorField.Equals(value) != true)) {
                    this.valorField = value;
                    this.RaisePropertyChanged("valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServico.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilme", ReplyAction="http://tempuri.org/IService1/GetFilmeResponse")]
        Client.WebServico.Filme GetFilme(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilme", ReplyAction="http://tempuri.org/IService1/GetFilmeResponse")]
        System.Threading.Tasks.Task<Client.WebServico.Filme> GetFilmeAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListFilmes", ReplyAction="http://tempuri.org/IService1/ListFilmesResponse")]
        Client.WebServico.Filme[] ListFilmes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListFilmes", ReplyAction="http://tempuri.org/IService1/ListFilmesResponse")]
        System.Threading.Tasks.Task<Client.WebServico.Filme[]> ListFilmesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFilme", ReplyAction="http://tempuri.org/IService1/AddFilmeResponse")]
        int AddFilme(int key, Client.WebServico.Filme filme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFilme", ReplyAction="http://tempuri.org/IService1/AddFilmeResponse")]
        System.Threading.Tasks.Task<int> AddFilmeAsync(int key, Client.WebServico.Filme filme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelFilme", ReplyAction="http://tempuri.org/IService1/DelFilmeResponse")]
        bool DelFilme(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelFilme", ReplyAction="http://tempuri.org/IService1/DelFilmeResponse")]
        System.Threading.Tasks.Task<bool> DelFilmeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UptFilme", ReplyAction="http://tempuri.org/IService1/UptFilmeResponse")]
        bool UptFilme(int id, Client.WebServico.Filme filme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UptFilme", ReplyAction="http://tempuri.org/IService1/UptFilmeResponse")]
        System.Threading.Tasks.Task<bool> UptFilmeAsync(int id, Client.WebServico.Filme filme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlataforma", ReplyAction="http://tempuri.org/IService1/GetPlataformaResponse")]
        Client.WebServico.Plataforma GetPlataforma(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlataforma", ReplyAction="http://tempuri.org/IService1/GetPlataformaResponse")]
        System.Threading.Tasks.Task<Client.WebServico.Plataforma> GetPlataformaAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListPlataforma", ReplyAction="http://tempuri.org/IService1/ListPlataformaResponse")]
        Client.WebServico.Plataforma[] ListPlataforma();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListPlataforma", ReplyAction="http://tempuri.org/IService1/ListPlataformaResponse")]
        System.Threading.Tasks.Task<Client.WebServico.Plataforma[]> ListPlataformaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPlataforma", ReplyAction="http://tempuri.org/IService1/AddPlataformaResponse")]
        bool AddPlataforma(int key, Client.WebServico.Plataforma plataforma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPlataforma", ReplyAction="http://tempuri.org/IService1/AddPlataformaResponse")]
        System.Threading.Tasks.Task<bool> AddPlataformaAsync(int key, Client.WebServico.Plataforma plataforma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelPlataforma", ReplyAction="http://tempuri.org/IService1/DelPlataformaResponse")]
        bool DelPlataforma(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelPlataforma", ReplyAction="http://tempuri.org/IService1/DelPlataformaResponse")]
        System.Threading.Tasks.Task<bool> DelPlataformaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UptPlataforma", ReplyAction="http://tempuri.org/IService1/UptPlataformaResponse")]
        bool UptPlataforma(int id, Client.WebServico.Plataforma plataforma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UptPlataforma", ReplyAction="http://tempuri.org/IService1/UptPlataformaResponse")]
        System.Threading.Tasks.Task<bool> UptPlataformaAsync(int id, Client.WebServico.Plataforma plataforma);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.WebServico.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.WebServico.IService1>, Client.WebServico.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.WebServico.Filme GetFilme(int value) {
            return base.Channel.GetFilme(value);
        }
        
        public System.Threading.Tasks.Task<Client.WebServico.Filme> GetFilmeAsync(int value) {
            return base.Channel.GetFilmeAsync(value);
        }
        
        public Client.WebServico.Filme[] ListFilmes() {
            return base.Channel.ListFilmes();
        }
        
        public System.Threading.Tasks.Task<Client.WebServico.Filme[]> ListFilmesAsync() {
            return base.Channel.ListFilmesAsync();
        }
        
        public int AddFilme(int key, Client.WebServico.Filme filme) {
            return base.Channel.AddFilme(key, filme);
        }
        
        public System.Threading.Tasks.Task<int> AddFilmeAsync(int key, Client.WebServico.Filme filme) {
            return base.Channel.AddFilmeAsync(key, filme);
        }
        
        public bool DelFilme(int id) {
            return base.Channel.DelFilme(id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFilmeAsync(int id) {
            return base.Channel.DelFilmeAsync(id);
        }
        
        public bool UptFilme(int id, Client.WebServico.Filme filme) {
            return base.Channel.UptFilme(id, filme);
        }
        
        public System.Threading.Tasks.Task<bool> UptFilmeAsync(int id, Client.WebServico.Filme filme) {
            return base.Channel.UptFilmeAsync(id, filme);
        }
        
        public Client.WebServico.Plataforma GetPlataforma(int value) {
            return base.Channel.GetPlataforma(value);
        }
        
        public System.Threading.Tasks.Task<Client.WebServico.Plataforma> GetPlataformaAsync(int value) {
            return base.Channel.GetPlataformaAsync(value);
        }
        
        public Client.WebServico.Plataforma[] ListPlataforma() {
            return base.Channel.ListPlataforma();
        }
        
        public System.Threading.Tasks.Task<Client.WebServico.Plataforma[]> ListPlataformaAsync() {
            return base.Channel.ListPlataformaAsync();
        }
        
        public bool AddPlataforma(int key, Client.WebServico.Plataforma plataforma) {
            return base.Channel.AddPlataforma(key, plataforma);
        }
        
        public System.Threading.Tasks.Task<bool> AddPlataformaAsync(int key, Client.WebServico.Plataforma plataforma) {
            return base.Channel.AddPlataformaAsync(key, plataforma);
        }
        
        public bool DelPlataforma(int id) {
            return base.Channel.DelPlataforma(id);
        }
        
        public System.Threading.Tasks.Task<bool> DelPlataformaAsync(int id) {
            return base.Channel.DelPlataformaAsync(id);
        }
        
        public bool UptPlataforma(int id, Client.WebServico.Plataforma plataforma) {
            return base.Channel.UptPlataforma(id, plataforma);
        }
        
        public System.Threading.Tasks.Task<bool> UptPlataformaAsync(int id, Client.WebServico.Plataforma plataforma) {
            return base.Channel.UptPlataformaAsync(id, plataforma);
        }
    }
}
